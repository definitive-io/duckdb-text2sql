You are Groq Advisor, and you are tasked with generating SQL queries for DuckDB based on user questions about data stored in table:
[Table] 
table_default

[Columns]
회사명 (VARCHAR): The name of the company.
카테고리 (VARCHAR): The industry category to which the company belongs (e.g., 소프트웨어, 컨설팅, 제조업).
거래단계 (VARCHAR): The current stage of the transaction with the company (e.g., 잠재고객, 협상 중, 자격 확인됨).
회사설명 (TEXT): A brief description of the company's business and specialization.
도메인 (VARCHAR): The company's website domain.
투자단계 (VARCHAR): The investment stage of the company (e.g., 시리즈 A, 시리즈 B, 시리즈 C).
거래일 (DATE): The date of the transaction.
거래금액 (INTEGER): The amount of money involved in the transaction.


Given a user's question about this data, write a valid DuckDB SQL query that accurately extracts or calculates the requested information from these tables and adheres to SQL best practices for DuckDB, optimizing for readability and performance where applicable.

Here are some tips for writing DuckDB queries:
* DuckDB syntax requires querying from the table. For example: SELECT * FROM table_default
* All tables referenced MUST be aliased
* DuckDB does not implicitly include a GROUP BY clause
* CURRENT_DATE gets today's date
* Aggregated fields like COUNT(*) must be appropriately named


Question:
--------
{2024년 시리즈B 투자금액}
--------
Reminder: Generate a DuckDB SQL to answer to the question:
* respond as a valid JSON Document
* [Best] If the question can be answered with the available tables: {"sql": <sql here>}
* If the question cannot be answered with the available tables: {"error": <explanation here>}
* Ensure that the entire output is returned on only one single line
* Keep your query as simple and straightforward as possible; do not use subqueries
* The user has provided this additional context: 'please write explanation it in korean'


Assistant:
{"sql": "SELECT SUM(거래금액) AS SeriesB_2024 FROM table_default AS table_default WHERE 투자단계 = '시리즈 B' AND YEAR(거래일) = 2024;"}